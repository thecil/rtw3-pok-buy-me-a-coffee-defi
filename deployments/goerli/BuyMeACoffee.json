{
  "address": "0x28cd3D2d2f00f4EE0ea2450756e6b6102a598F3c",
  "abi": [
    {
      "inputs": [],
      "stateMutability": "nonpayable",
      "type": "constructor"
    },
    {
      "anonymous": false,
      "inputs": [
        {
          "indexed": true,
          "internalType": "address",
          "name": "from",
          "type": "address"
        },
        {
          "indexed": false,
          "internalType": "uint256",
          "name": "timestamp",
          "type": "uint256"
        },
        {
          "indexed": false,
          "internalType": "string",
          "name": "name",
          "type": "string"
        },
        {
          "indexed": false,
          "internalType": "string",
          "name": "message",
          "type": "string"
        }
      ],
      "name": "NewMemo",
      "type": "event"
    },
    {
      "inputs": [
        {
          "internalType": "string",
          "name": "_name",
          "type": "string"
        },
        {
          "internalType": "string",
          "name": "_message",
          "type": "string"
        }
      ],
      "name": "buyCoffee",
      "outputs": [],
      "stateMutability": "payable",
      "type": "function"
    },
    {
      "inputs": [],
      "name": "getMemos",
      "outputs": [
        {
          "components": [
            {
              "internalType": "address",
              "name": "from",
              "type": "address"
            },
            {
              "internalType": "uint256",
              "name": "timestamp",
              "type": "uint256"
            },
            {
              "internalType": "string",
              "name": "name",
              "type": "string"
            },
            {
              "internalType": "string",
              "name": "message",
              "type": "string"
            }
          ],
          "internalType": "struct BuyMeACoffee.Memo[]",
          "name": "",
          "type": "tuple[]"
        }
      ],
      "stateMutability": "view",
      "type": "function"
    },
    {
      "inputs": [],
      "name": "withdrawTips",
      "outputs": [],
      "stateMutability": "nonpayable",
      "type": "function"
    }
  ],
  "transactionHash": "0x3eaea31f4805c40387fa3eae36f3184ff9de78bb2a67a5c716d4f14588b1edda",
  "receipt": {
    "to": null,
    "from": "0x32F0a4Db8350a0882241623A50587e048e11a126",
    "contractAddress": "0x28cd3D2d2f00f4EE0ea2450756e6b6102a598F3c",
    "transactionIndex": 77,
    "gasUsed": "513118",
    "logsBloom": "0x
    "blockHash": "0x8d37b760f5b9f172e304ef872ddde2286084a02c081b76d2950a407673c236cf",
    "transactionHash": "0x3eaea31f4805c40387fa3eae36f3184ff9de78bb2a67a5c716d4f14588b1edda",
    "logs": [],
    "blockNumber": 7828338,
    "cumulativeGasUsed": "10259321",
    "status": 1,
    "byzantium": true
  },
  "args": [],
  "numDeployments": 1,
  "solcInputHash": "d4ad6914782b9c5f9173ba162cdc2639",
  "metadata": "{\"compiler\":{\"version\":\"0.8.0+commit.c7dfd78e\"},\"language\":\"Solidity\",\"output\":{\"abi\":[{\"inputs\":[],\"stateMutability\":\"nonpayable\",\"type\":\"constructor\"},{\"anonymous\":false,\"inputs\":[{\"indexed\":true,\"internalType\":\"address\",\"name\":\"from\",\"type\":\"address\"},{\"indexed\":false,\"internalType\":\"uint256\",\"name\":\"timestamp\",\"type\":\"uint256\"},{\"indexed\":false,\"internalType\":\"string\",\"name\":\"name\",\"type\":\"string\"},{\"indexed\":false,\"internalType\":\"string\",\"name\":\"message\",\"type\":\"string\"}],\"name\":\"NewMemo\",\"type\":\"event\"},{\"inputs\":[{\"internalType\":\"string\",\"name\":\"_name\",\"type\":\"string\"},{\"internalType\":\"string\",\"name\":\"_message\",\"type\":\"string\"}],\"name\":\"buyCoffee\",\"outputs\":[],\"stateMutability\":\"payable\",\"type\":\"function\"},{\"inputs\":[],\"name\":\"getMemos\",\"outputs\":[{\"components\":[{\"internalType\":\"address\",\"name\":\"from\",\"type\":\"address\"},{\"internalType\":\"uint256\",\"name\":\"timestamp\",\"type\":\"uint256\"},{\"internalType\":\"string\",\"name\":\"name\",\"type\":\"string\"},{\"internalType\":\"string\",\"name\":\"message\",\"type\":\"string\"}],\"internalType\":\"struct BuyMeACoffee.Memo[]\",\"name\":\"\",\"type\":\"tuple[]\"}],\"stateMutability\":\"view\",\"type\":\"function\"},{\"inputs\":[],\"name\":\"withdrawTips\",\"outputs\":[],\"stateMutability\":\"nonpayable\",\"type\":\"function\"}],\"devdoc\":{\"kind\":\"dev\",\"methods\":{\"buyCoffee(string,string)\":{\"details\":\"buy a coffee for owner (sends an ETH tip and leaves a memo)\",\"params\":{\"_message\":\"a nice message from the purchaser\",\"_name\":\"name of the coffee purchaser\"}},\"getMemos()\":{\"details\":\"fetches all stored memos\"},\"withdrawTips()\":{\"details\":\"send the entire balance stored in this contract to the owner\"}},\"version\":1},\"userdoc\":{\"kind\":\"user\",\"methods\":{},\"version\":1}},\"settings\":{\"compilationTarget\":{\"contracts/BuyMeACoffee.sol\":\"BuyMeACoffee\"},\"evmVersion\":\"istanbul\",\"libraries\":{},\"metadata\":{\"bytecodeHash\":\"ipfs\",\"useLiteralContent\":true},\"optimizer\":{\"enabled\":true,\"runs\":2000},\"remappings\":[]},\"sources\":{\"contracts/BuyMeACoffee.sol\":{\"content\":\"//SPDX-License-Identifier: Unlicense\\r\\n\\r\\n// contracts/BuyMeACoffee.sol\\r\\npragma solidity ^0.8.0;\\r\\n\\r\\n// Switch this to your own contract address once deployed, for bookkeeping!\\r\\n// Example Contract Address on Goerli: 0xDBa03676a2fBb6711CB652beF5B7416A53c1421D\\r\\n\\r\\ncontract BuyMeACoffee {\\r\\n    // Event to emit when a Memo is created.\\r\\n    event NewMemo(\\r\\n        address indexed from,\\r\\n        uint256 timestamp,\\r\\n        string name,\\r\\n        string message\\r\\n    );\\r\\n    \\r\\n    // Memo struct.\\r\\n    struct Memo {\\r\\n        address from;\\r\\n        uint256 timestamp;\\r\\n        string name;\\r\\n        string message;\\r\\n    }\\r\\n    \\r\\n    // Address of contract deployer. Marked payable so that\\r\\n    // we can withdraw to this address later.\\r\\n    address payable owner;\\r\\n\\r\\n    // List of all memos received from coffee purchases.\\r\\n    Memo[] memos;\\r\\n\\r\\n    constructor() {\\r\\n        // Store the address of the deployer as a payable address.\\r\\n        // When we withdraw funds, we'll withdraw here.\\r\\n        owner = payable(msg.sender);\\r\\n    }\\r\\n\\r\\n    /**\\r\\n     * @dev fetches all stored memos\\r\\n     */\\r\\n    function getMemos() public view returns (Memo[] memory) {\\r\\n        return memos;\\r\\n    }\\r\\n\\r\\n    /**\\r\\n     * @dev buy a coffee for owner (sends an ETH tip and leaves a memo)\\r\\n     * @param _name name of the coffee purchaser\\r\\n     * @param _message a nice message from the purchaser\\r\\n     */\\r\\n    function buyCoffee(string memory _name, string memory _message) public payable {\\r\\n        // Must accept more than 0 ETH for a coffee.\\r\\n        require(msg.value > 0, \\\"can't buy coffee for free!\\\");\\r\\n\\r\\n        // Add the memo to storage!\\r\\n        memos.push(Memo(\\r\\n            msg.sender,\\r\\n            block.timestamp,\\r\\n            _name,\\r\\n            _message\\r\\n        ));\\r\\n\\r\\n        // Emit a NewMemo event with details about the memo.\\r\\n        emit NewMemo(\\r\\n            msg.sender,\\r\\n            block.timestamp,\\r\\n            _name,\\r\\n            _message\\r\\n        );\\r\\n    }\\r\\n\\r\\n    /**\\r\\n     * @dev send the entire balance stored in this contract to the owner\\r\\n     */\\r\\n    function withdrawTips() public {\\r\\n        require(owner.send(address(this).balance));\\r\\n    }\\r\\n}\",\"keccak256\":\"0x9ce5b9073e7479a870537cb5579d6ec0124246ff1c48c71c93a3811610f16f0d\",\"license\":\"Unlicense\"}},\"version\":1}",
  "bytecode": "0x608060405234801561001057600080fd5b50600080546001600160a01b031916331790556107ef806100326000396000f3fe6080604052600436106100345760003560e01c8063204206e1146100395780633aaa74b21461004e578063865c517214610063575b600080fd5b61004c610047366004610551565b61008e565b005b34801561005a57600080fd5b5061004c610246565b34801561006f57600080fd5b50610078610287565b60405161008591906105fd565b60405180910390f35b600034116100d1576040517f08c379a00000000000000000000000000000000000000000000000000000000081526004016100c8906106ca565b60405180910390fd5b6040805160808101825233815242602080830191825292820185815260608301859052600180548082018255600091909152835160049091027fb10e2d527612073b26eecdfd717e6a320cf44b4afac2b0732d9fcbe2b7fa0cf68101805473ffffffffffffffffffffffffffffffffffffffff939093167fffffffffffffffffffffffff000000000000000000000000000000000000000090931692909217825592517fb10e2d527612073b26eecdfd717e6a320cf44b4afac2b0732d9fcbe2b7fa0cf784015590518051939491936101d1937fb10e2d527612073b26eecdfd717e6a320cf44b4afac2b0732d9fcbe2b7fa0cf801929190910190610437565b50606082015180516101ed916003840191602090910190610437565b5050503373ffffffffffffffffffffffffffffffffffffffff167fc56140e05f516509ae28110e0f72e17558a7561630dad2647c3ae87d986e365c42848460405161023a93929190610701565b60405180910390a25050565b6000805460405173ffffffffffffffffffffffffffffffffffffffff909116914780156108fc02929091818181858888f1935050505061028557600080fd5b565b60606001805480602002602001604051908101604052809291908181526020016000905b8282101561042e5760008481526020908190206040805160808101825260048602909201805473ffffffffffffffffffffffffffffffffffffffff1683526001810154938301939093526002830180549293929184019161030b90610736565b80601f016020809104026020016040519081016040528092919081815260200182805461033790610736565b80156103845780601f1061035957610100808354040283529160200191610384565b820191906000526020600020905b81548152906001019060200180831161036757829003601f168201915b5050505050815260200160038201805461039d90610736565b80601f01602080910402602001604051908101604052809291908181526020018280546103c990610736565b80156104165780601f106103eb57610100808354040283529160200191610416565b820191906000526020600020905b8154815290600101906020018083116103f957829003601f168201915b505050505081525050815260200190600101906102ab565b50505050905090565b82805461044390610736565b90600052602060002090601f01602090048101928261046557600085556104ab565b82601f1061047e57805160ff19168380011785556104ab565b828001600101855582156104ab579182015b828111156104ab578251825591602001919060010190610490565b506104b79291506104bb565b5090565b5b808211156104b757600081556001016104bc565b600082601f8301126104e0578081fd5b813567ffffffffffffffff808211156104fb576104fb61078a565b6040516020601f19601f850116820101818110838211171561051f5761051f61078a565b604052828152848301602001861015610536578384fd5b82602086016020830137918201602001929092529392505050565b60008060408385031215610563578182fd5b823567ffffffffffffffff8082111561057a578384fd5b610586868387016104d0565b9350602085013591508082111561059b578283fd5b506105a8858286016104d0565b9150509250929050565b60008151808452815b818110156105d7576020818501810151868301820152016105bb565b818111156105e85782602083870101525b50601f01601f19169290920160200192915050565b60208082528251828201819052600091906040908185019080840286018301878501865b838110156106bc577fffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffc08984030185528151608073ffffffffffffffffffffffffffffffffffffffff8251168552888201518986015287820151818987015261068b828701826105b2565b915050606080830151925085820381870152506106a881836105b2565b968901969450505090860190600101610621565b509098975050505050505050565b6020808252601a908201527f63616e27742062757920636f6666656520666f72206672656521000000000000604082015260600190565b60008482526060602083015261071a60608301856105b2565b828103604084015261072c81856105b2565b9695505050505050565b60028104600182168061074a57607f821691505b60208210811415610784577f4e487b7100000000000000000000000000000000000000000000000000000000600052602260045260246000fd5b50919050565b7f4e487b7100000000000000000000000000000000000000000000000000000000600052604160045260246000fdfea264697066735822122027d6fa46110ceba158196add7e7b22d16154454185f0bd4fc2f14e41e1d78bdd64736f6c63430008000033",
  "deployedBytecode": "0x6080604052600436106100345760003560e01c8063204206e1146100395780633aaa74b21461004e578063865c517214610063575b600080fd5b61004c610047366004610551565b61008e565b005b34801561005a57600080fd5b5061004c610246565b34801561006f57600080fd5b50610078610287565b60405161008591906105fd565b60405180910390f35b600034116100d1576040517f08c379a00000000000000000000000000000000000000000000000000000000081526004016100c8906106ca565b60405180910390fd5b6040805160808101825233815242602080830191825292820185815260608301859052600180548082018255600091909152835160049091027fb10e2d527612073b26eecdfd717e6a320cf44b4afac2b0732d9fcbe2b7fa0cf68101805473ffffffffffffffffffffffffffffffffffffffff939093167fffffffffffffffffffffffff000000000000000000000000000000000000000090931692909217825592517fb10e2d527612073b26eecdfd717e6a320cf44b4afac2b0732d9fcbe2b7fa0cf784015590518051939491936101d1937fb10e2d527612073b26eecdfd717e6a320cf44b4afac2b0732d9fcbe2b7fa0cf801929190910190610437565b50606082015180516101ed916003840191602090910190610437565b5050503373ffffffffffffffffffffffffffffffffffffffff167fc56140e05f516509ae28110e0f72e17558a7561630dad2647c3ae87d986e365c42848460405161023a93929190610701565b60405180910390a25050565b6000805460405173ffffffffffffffffffffffffffffffffffffffff909116914780156108fc02929091818181858888f1935050505061028557600080fd5b565b60606001805480602002602001604051908101604052809291908181526020016000905b8282101561042e5760008481526020908190206040805160808101825260048602909201805473ffffffffffffffffffffffffffffffffffffffff1683526001810154938301939093526002830180549293929184019161030b90610736565b80601f016020809104026020016040519081016040528092919081815260200182805461033790610736565b80156103845780601f1061035957610100808354040283529160200191610384565b820191906000526020600020905b81548152906001019060200180831161036757829003601f168201915b5050505050815260200160038201805461039d90610736565b80601f01602080910402602001604051908101604052809291908181526020018280546103c990610736565b80156104165780601f106103eb57610100808354040283529160200191610416565b820191906000526020600020905b8154815290600101906020018083116103f957829003601f168201915b505050505081525050815260200190600101906102ab565b50505050905090565b82805461044390610736565b90600052602060002090601f01602090048101928261046557600085556104ab565b82601f1061047e57805160ff19168380011785556104ab565b828001600101855582156104ab579182015b828111156104ab578251825591602001919060010190610490565b506104b79291506104bb565b5090565b5b808211156104b757600081556001016104bc565b600082601f8301126104e0578081fd5b813567ffffffffffffffff808211156104fb576104fb61078a565b6040516020601f19601f850116820101818110838211171561051f5761051f61078a565b604052828152848301602001861015610536578384fd5b82602086016020830137918201602001929092529392505050565b60008060408385031215610563578182fd5b823567ffffffffffffffff8082111561057a578384fd5b610586868387016104d0565b9350602085013591508082111561059b578283fd5b506105a8858286016104d0565b9150509250929050565b60008151808452815b818110156105d7576020818501810151868301820152016105bb565b818111156105e85782602083870101525b50601f01601f19169290920160200192915050565b60208082528251828201819052600091906040908185019080840286018301878501865b838110156106bc577fffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffc08984030185528151608073ffffffffffffffffffffffffffffffffffffffff8251168552888201518986015287820151818987015261068b828701826105b2565b915050606080830151925085820381870152506106a881836105b2565b968901969450505090860190600101610621565b509098975050505050505050565b6020808252601a908201527f63616e27742062757920636f6666656520666f72206672656521000000000000604082015260600190565b60008482526060602083015261071a60608301856105b2565b828103604084015261072c81856105b2565b9695505050505050565b60028104600182168061074a57607f821691505b60208210811415610784577f4e487b7100000000000000000000000000000000000000000000000000000000600052602260045260246000fd5b50919050565b7f4e487b7100000000000000000000000000000000000000000000000000000000600052604160045260246000fdfea264697066735822122027d6fa46110ceba158196add7e7b22d16154454185f0bd4fc2f14e41e1d78bdd64736f6c63430008000033",
  "devdoc": {
    "kind": "dev",
    "methods": {
      "buyCoffee(string,string)": {
        "details": "buy a coffee for owner (sends an ETH tip and leaves a memo)",
        "params": {
          "_message": "a nice message from the purchaser",
          "_name": "name of the coffee purchaser"
        }
      },
      "getMemos()": {
        "details": "fetches all stored memos"
      },
      "withdrawTips()": {
        "details": "send the entire balance stored in this contract to the owner"
      }
    },
    "version": 1
  },
  "userdoc": {
    "kind": "user",
    "methods": {},
    "version": 1
  },
  "storageLayout": {
    "storage": [
      {
        "astId": 22,
        "contract": "contracts/BuyMeACoffee.sol:BuyMeACoffee",
        "label": "owner",
        "offset": 0,
        "slot": "0",
        "type": "t_address_payable"
      },
      {
        "astId": 26,
        "contract": "contracts/BuyMeACoffee.sol:BuyMeACoffee",
        "label": "memos",
        "offset": 0,
        "slot": "1",
        "type": "t_array(t_struct(Memo)20_storage)dyn_storage"
      }
    ],
    "types": {
      "t_address": {
        "encoding": "inplace",
        "label": "address",
        "numberOfBytes": "20"
      },
      "t_address_payable": {
        "encoding": "inplace",
        "label": "address payable",
        "numberOfBytes": "20"
      },
      "t_array(t_struct(Memo)20_storage)dyn_storage": {
        "base": "t_struct(Memo)20_storage",
        "encoding": "dynamic_array",
        "label": "struct BuyMeACoffee.Memo[]",
        "numberOfBytes": "32"
      },
      "t_string_storage": {
        "encoding": "bytes",
        "label": "string",
        "numberOfBytes": "32"
      },
      "t_struct(Memo)20_storage": {
        "encoding": "inplace",
        "label": "struct BuyMeACoffee.Memo",
        "members": [
          {
            "astId": 13,
            "contract": "contracts/BuyMeACoffee.sol:BuyMeACoffee",
            "label": "from",
            "offset": 0,
            "slot": "0",
            "type": "t_address"
          },
          {
            "astId": 15,
            "contract": "contracts/BuyMeACoffee.sol:BuyMeACoffee",
            "label": "timestamp",
            "offset": 0,
            "slot": "1",
            "type": "t_uint256"
          },
          {
            "astId": 17,
            "contract": "contracts/BuyMeACoffee.sol:BuyMeACoffee",
            "label": "name",
            "offset": 0,
            "slot": "2",
            "type": "t_string_storage"
          },
          {
            "astId": 19,
            "contract": "contracts/BuyMeACoffee.sol:BuyMeACoffee",
            "label": "message",
            "offset": 0,
            "slot": "3",
            "type": "t_string_storage"
          }
        ],
        "numberOfBytes": "128"
      },
      "t_uint256": {
        "encoding": "inplace",
        "label": "uint256",
        "numberOfBytes": "32"
      }
    }
  }
}